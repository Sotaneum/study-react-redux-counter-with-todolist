{"version":3,"sources":["components/Counter.js","store/actions/counter.js","store/actions/types.js","containers/CounterContainer.js","store/actions/todos.js","components/Todos.js","containers/TodosContainer.js","App.js","store/reducers/todos.js","store/reducers/counter.js","store/reducers/index.js","index.js"],"names":["Counter","number","onIncrease","onDecrease","onClick","increase","createAction","decrease","CounterContainer","useSelector","state","counter","dispatch","useDispatch","useCallback","changeInput","input","id","insert","text","done","toggle","remove","TodoItem","todo","onToggle","onRemove","type","onChange","checked","readOnly","style","textDecoration","Todos","todos","onChangeInput","onInsert","onSubmit","e","preventDefault","value","target","map","key","TodosContainer","App","handleActions","payload","produce","draft","push","find","index","findIndex","splice","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"6NAceA,G,MAZC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACrC,OACE,6BACE,4BAAKF,GACL,6BACE,4BAAQG,QAASF,GAAjB,MACA,4BAAQE,QAASD,GAAjB,U,QCLKE,EAAWC,YCHA,oBDIXC,EAAWD,YCHA,oBCcTE,EAVU,WACvB,IAAMP,EAASQ,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQV,UAC9CW,EAAWC,cACXX,EAAaY,uBAAY,kBAAMF,EAASP,OAAa,CAACO,IACtDT,EAAaW,uBAAY,kBAAMF,EAASL,OAAa,CAACK,IAC5D,OACE,kBAAC,EAAD,CAASX,OAAQA,EAAQC,WAAYA,EAAYC,WAAYA,KCRpDY,EAAcT,YFDC,sBEC0B,SAACU,GAAD,OAAWA,KAE7DC,EAAK,EACIC,EAASZ,YFHA,gBEGqB,SAACa,GAAD,MAAW,CACpDA,OACAF,GAAIA,IACJG,MAAM,MAGKC,EAASf,YFRA,gBEQqB,SAACW,GAAD,OAAQA,KACtCK,EAAShB,YFRA,gBEQqB,SAACW,GAAD,OAAQA,KCX7CM,EAAW,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClC,OACE,6BACE,2BACEC,KAAK,WACLC,SAAU,kBAAMH,EAASD,EAAKP,KAC9BY,QAASL,EAAKJ,KACdU,UAAU,IAEZ,0BAAMC,MAAO,CAAEC,eAAgBR,EAAKJ,KAAO,eAAiB,SACzDI,EAAKL,MAER,4BAAQf,QAAS,kBAAMsB,EAASF,EAAKP,MAArC,kBAuCSgB,EAlCD,SAAC,GAOR,IANLjB,EAMI,EANJA,MACAkB,EAKI,EALJA,MACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,SACAX,EAEI,EAFJA,SACAC,EACI,EADJA,SAQA,OACE,6BACE,0BAAMW,SARO,SAACC,GAChBA,EAAEC,iBACFH,EAASpB,GACTmB,EAAc,MAMV,2BAAOK,MAAOxB,EAAOY,SAJV,SAACU,GAAD,OAAOH,EAAcG,EAAEG,OAAOD,UAKzC,4BAAQb,KAAK,UAAb,iBAEF,6BACGO,EAAMQ,KAAI,SAAClB,GAAD,OACT,kBAAC,EAAD,CACEA,KAAMA,EACNmB,IAAKnB,EAAKP,GACVQ,SAAUA,EACVC,SAAUA,UCfPkB,EAzBQ,WACrB,MAAyBnC,aAAY,gBAAGyB,EAAH,EAAGA,MAAH,MAAgB,CACnDlB,MAAOkB,EAAMlB,MACbkB,MAAOA,EAAMA,UAFPlB,EAAR,EAAQA,MAAOkB,EAAf,EAAeA,MAITtB,EAAWC,cACXsB,EAAgBrB,uBAAY,SAACE,GAAD,OAAWJ,EAASG,EAAYC,MAAS,CACzEJ,IAEIwB,EAAWtB,uBAAY,SAACK,GAAD,OAAUP,EAASM,EAAOC,MAAQ,CAACP,IAC1Da,EAAWX,uBAAY,SAACG,GAAD,OAAQL,EAASS,EAAOJ,MAAM,CAACL,IACtDc,EAAWZ,uBAAY,SAACG,GAAD,OAAQL,EAASU,EAAOL,MAAM,CAACL,IAE5D,OACE,kBAAC,EAAD,CACEI,MAAOA,EACPkB,MAAOA,EACPC,cAAeA,EACfC,SAAUA,EACVX,SAAUA,EACVC,SAAUA,KCXDmB,I,IAAAA,EAVf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,Q,sBCmCSX,EAxBDY,aAAa,mBNlBC,sBMoBR,SAACpC,EAAD,OAAmBM,EAAnB,EAAU+B,QAAV,OACdC,YAAQtC,GAAO,SAACuC,GACdA,EAAMjC,MAAQA,QAJK,cNjBL,gBMuBR,SAACN,EAAD,OAAmBc,EAAnB,EAAUuB,QAAV,OACRC,YAAQtC,GAAO,SAACuC,GACdA,EAAMf,MAAMgB,KAAK1B,SARE,cNhBL,gBM0BR,SAACd,EAAD,OAAmBO,EAAnB,EAAU8B,QAAV,OACRC,YAAQtC,GAAO,SAACuC,GACd,IAAMzB,EAAOyB,EAAMf,MAAMiB,MAAK,SAAC3B,GAAD,OAAUA,EAAKP,KAAOA,KACpDO,EAAKJ,MAAQI,EAAKJ,WAbC,cNfL,gBM8BR,SAACV,EAAD,OAAmBO,EAAnB,EAAU8B,QAAV,OACRC,YAAQtC,GAAO,SAACuC,GACd,IAAMG,EAAQH,EAAMf,MAAMmB,WAAU,SAAC7B,GAAD,OAAUA,EAAKP,KAAOA,KAC1DgC,EAAMf,MAAMoB,OAAOF,EAAO,SAlBP,GAhBN,CACnBpC,MAAO,GACPkB,MAAO,CACL,CACEjB,GAAI,EACJG,MAAM,EACND,KAAM,sDAER,CACEF,GAAI,EACJG,MAAM,EACND,KAAM,2ECAGR,EARCmC,aAAa,iBAAC,EPPN,oBOSR,SAACpC,EAAO6C,GAAR,MAAoB,CAAEtD,OAAQS,EAAMT,OAAS,MAFhC,YAAC,EPNN,oBOSR,SAACS,EAAO6C,GAAR,MAAoB,CAAEtD,OAAQS,EAAMT,OAAS,MAHhC,GAJR,CACnBA,OAAQ,ICKKuD,EALKC,0BAAgB,CAClCvB,QACAvB,YCGI+C,EAAQC,sBAAYH,EAAaI,iCAEvCC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.40a5bd6a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Counter = ({ number, onIncrease, onDecrease }) => {\n  return (\n    <div>\n      <h1>{number}</h1>\n      <div>\n        <button onClick={onIncrease}>+1</button>\n        <button onClick={onDecrease}>-1</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Counter;\n","import { createAction } from 'redux-actions';\nimport { INCREASE, DECREASE } from './types';\n\nexport const increase = createAction(INCREASE);\nexport const decrease = createAction(DECREASE);\n","export const INCREASE = 'counter/INCREASE';\nexport const DECREASE = 'counter/DECREASE';\nexport const CHANGE_INPUT = 'todos/CHANGE_INPUT';\nexport const INSERT = 'todos/INSERT';\nexport const TOGGLE = 'todos/TOGGLE';\nexport const REMOVE = 'todos/REMOVE';\n","import React, { useCallback } from 'react';\nimport Counter from '../components/Counter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increase, decrease } from '../store/actions/counter';\n\nconst CounterContainer = () => {\n  const number = useSelector((state) => state.counter.number);\n  const dispatch = useDispatch();\n  const onIncrease = useCallback(() => dispatch(increase()), [dispatch]);\n  const onDecrease = useCallback(() => dispatch(decrease()), [dispatch]);\n  return (\n    <Counter number={number} onIncrease={onIncrease} onDecrease={onDecrease} />\n  );\n};\n\nexport default CounterContainer;\n","import { createAction } from 'redux-actions';\nimport { INSERT, TOGGLE, REMOVE, CHANGE_INPUT } from './types';\n\nexport const changeInput = createAction(CHANGE_INPUT, (input) => input);\n\nlet id = 3;\nexport const insert = createAction(INSERT, (text) => ({\n  text,\n  id: id++,\n  done: false,\n}));\n\nexport const toggle = createAction(TOGGLE, (id) => id);\nexport const remove = createAction(REMOVE, (id) => id);\n","import React from 'react';\n\nconst TodoItem = ({ todo, onToggle, onRemove }) => {\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        onChange={() => onToggle(todo.id)}\n        checked={todo.done}\n        readOnly={true}\n      />\n      <span style={{ textDecoration: todo.done ? 'line-through' : 'none' }}>\n        {todo.text}\n      </span>\n      <button onClick={() => onRemove(todo.id)}>삭제</button>\n    </div>\n  );\n};\n\nconst Todos = ({\n  input,\n  todos,\n  onChangeInput,\n  onInsert,\n  onToggle,\n  onRemove,\n}) => {\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onInsert(input);\n    onChangeInput('');\n  };\n  const onChange = (e) => onChangeInput(e.target.value);\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input value={input} onChange={onChange} />\n        <button type=\"submit\">등록</button>\n      </form>\n      <div>\n        {todos.map((todo) => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            onToggle={onToggle}\n            onRemove={onRemove}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Todos;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeInput, insert, toggle, remove } from '../store/actions/todos';\nimport Todos from '../components/Todos';\n\nconst TodosContainer = () => {\n  const { input, todos } = useSelector(({ todos }) => ({\n    input: todos.input,\n    todos: todos.todos,\n  }));\n  const dispatch = useDispatch();\n  const onChangeInput = useCallback((input) => dispatch(changeInput(input)), [\n    dispatch,\n  ]);\n  const onInsert = useCallback((text) => dispatch(insert(text)), [dispatch]);\n  const onToggle = useCallback((id) => dispatch(toggle(id)), [dispatch]);\n  const onRemove = useCallback((id) => dispatch(remove(id)), [dispatch]);\n\n  return (\n    <Todos\n      input={input}\n      todos={todos}\n      onChangeInput={onChangeInput}\n      onInsert={onInsert}\n      onToggle={onToggle}\n      onRemove={onRemove}\n    />\n  );\n};\n\nexport default TodosContainer;\n","import React from 'react';\nimport CounterContainer from './containers/CounterContainer';\nimport TodosContainer from './containers/TodosContainer';\n\nfunction App() {\n  return (\n    <div>\n      <CounterContainer />\n      <hr />\n      <TodosContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { INSERT, TOGGLE, REMOVE, CHANGE_INPUT } from '../actions/types';\n\nconst initialState = {\n  input: '',\n  todos: [\n    {\n      id: 1,\n      done: true,\n      text: '리덕스 기초 배우기',\n    },\n    {\n      id: 2,\n      done: false,\n      text: '리액트와 리덕스 사용하기',\n    },\n  ],\n};\n\nconst todos = handleActions(\n  {\n    [CHANGE_INPUT]: (state, { payload: input }) =>\n      produce(state, (draft) => {\n        draft.input = input;\n      }),\n    [INSERT]: (state, { payload: todo }) =>\n      produce(state, (draft) => {\n        draft.todos.push(todo);\n      }),\n    [TOGGLE]: (state, { payload: id }) =>\n      produce(state, (draft) => {\n        const todo = draft.todos.find((todo) => todo.id === id);\n        todo.done = !todo.done;\n      }),\n    [REMOVE]: (state, { payload: id }) =>\n      produce(state, (draft) => {\n        const index = draft.todos.findIndex((todo) => todo.id === id);\n        draft.todos.splice(index, 1);\n      }),\n  },\n  initialState,\n);\n\nexport default todos;\n","import { handleActions } from 'redux-actions';\nimport { INCREASE, DECREASE } from '../actions/types';\n\nconst initialState = {\n  number: 0,\n};\n\nconst counter = handleActions(\n  {\n    [INCREASE]: (state, action) => ({ number: state.number + 1 }),\n    [DECREASE]: (state, action) => ({ number: state.number - 1 }),\n  },\n  initialState,\n);\n\nexport default counter;\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport counter from './counter';\n\nconst rootReducer = combineReducers({\n  todos,\n  counter,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './index.css';\nimport App from './App';\nimport rootReducer from './store/reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}